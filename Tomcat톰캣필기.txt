1. apache-tomcat-9.0.63.zip 다운&압축풀기(임의폴더)
2. 이클립스-Preferences-Server-Runtime Evironments에서 Apache Tomcat v9.0 선택 Next 
  - Tomcat installation directory에다 설치한 디렉토리를 세팅하고 Finish
3. Dynamic Web Project 생성(Generate web.xml체크) 
  src\main\webapp\WEB-INF\web.xml 생성됨 -> jsp프로젝트라면 파일 내 <welcome-file>index.jsp</welcome-file>을 최상위로

4. webapp우클릭new - HTML file 파일 생성 (index.html)
  Run as - Run on Server (톰캣9.0선택)
  8080충돌 오류나면->Windows-Show View-Servers 창에서 Tomcat v9.0 더블클릭 
  - 우측 HTTP/1.1 포트넘버 80으로 바꿔줌 (Tomcat세팅.jpg참고)
  - Tomcat세팅.jpg좌측 Server Locations에서 Server path: C:\Dev\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\Ajax\index.html이 실제 실행되는 파일임
  만약에 404에러 난다면 해당 폴더 및 인근 위치에 파일들 뒤져볼 것.

5. src/main/java 우클릭 패키지생성
패키지에서 new - Servlet 생성과정 중 하단 URL mappings: 에 Add 하고 /ajax.do 타이핑하고 Finish

6. 라이브러리추가
JDBC
C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6_g.jar 파일을
프로젝트\src\main\webapp\WEB-INF\lib\에 복사

GSON
maven사이트에서 gson-2.9.0.jar을
프로젝트\src\main\webapp\WEB-INF\lib\에 복사

파일업로드
cos-22.05.zip의 cos.jar파일을
프로젝트\src\main\webapp\WEB-INF\lib\에 복사


───────────────────────
■ 새로운 작업 환경(집)에서 톰캣 프로젝트 이어하기
1. apache-tomcat-9.0.63.zip 다운&압축풀기(임의폴더)
2. 이클립스-Preferences-Server-Runtime Evironments에서 Apache Tomcat v9.0 선택 Next 
  - Tomcat installation directory에다 설치한 디렉토리를 세팅하고 Finish
3. 이어할 프로젝트 우클릭 - Build Path - Libraries탭 
  - Classpath에 Server Runtime [apache-tomcat-9.0.63]이 unbound상태일 것이다. 
  이거 더블클릭해서 팝업창에서 apache-tomcat-9.0.63 선택하고 finish해주면 됨
  →어노테이션@WebServlet, HttpServletRequest 등등에 빨간줄 떠있던 거 다 사라짐!
4. 일단 소스 내 빨간줄은 다 사라졌지만 프로젝트 자체 오류(x표시)는 그대로일 것이다.
  프로젝트 우클릭 - Properties - Targeted Runtimes에 apache-tomcat-9.0.63를 체크하고 Apply
  (만약 그래도 빨간줄 안 사라지면 Targeted Runtimes에서 New 눌러서 위1. 2.과정 똑같이 해주면 됨)

───────────────────────
■ ORA-01017: 사용자명/비밀번호가 부적합, 로그온할 수 없습니다. 오류날 때
[구글링1] 오라클11g버전부터 대소문자를 구별해서 그렇다. 다음의 쿼리를 실행해봐
  show parameter sec_case; --대소문자구별이 true로 되어있음을 확인
  alter system set sec_case_sensitive_logon=false; --false로 바꿔
-->해결 안 됨. 심지어 내가 쓰는 오라클21c버전은 sec_case라는 파라미터 자체가 없다!!(show parameter; 쳐보면 목록 나오는데 sec_case는 눈을 씻고 찾아봐도 안 보임)
그리고 씨발 내가 대소문자 구분 하나 못할까 봐. 아뒤 hr 비번 hr 이렇게 간단한 건데? 
HR/hr, hr/HR, HR/HR, Hr/hR 등등 이미 가능한 거 다 트라이 해봤다고. 병신 아님ㅋ 비단 지금뿐만 아니라 평소에도 나 스스로 case-sensitive충에다 존나 쓸데없이 세세한 거에 강박적으로 꼼꼼하고 변태충이라 이런거 존나 철저하게 하는 편이라서 이런 쪽 감은 확실하게 촉이 있는데 절대로 대소문자 문제 아니다. 이건 확신한다.
그리고 오라클sql이나 cmd>sqlplus에서는 hr/hr로 접속 잘만 되고 있는 중. 지금 자바프로젝트에서'만' hr/hr이 틀렸다고 나오는 중이다. 
근데 구글링하면 블로그고 어디 포럼이고 해법의 90%다 이 방법을 제시한다. 개새들 지랄병하고 앉았네ㅋ

[구글링2] 접속하려는 계정이 락걸렸나? 그럼 풀어.
  오라클관리자계정-다른사용자-HR우클릭사용자편집-"계정이 잠겨 있습니다" 체크 해제 여부 확인
-->해결 안 됨

[구글링3] 계정에 세션생성 권한이 없냐? 그럼 줘.
  GRANT connect, resource, dba, create session, create view, create synonym, create any table, select any table TO hr;
  세션 생성은 물론 필수 잡다한 권한 다 줬다. 이거 기본 아님? 씨발 기본자질 의심하는 듯한 해법 올리는 새끼들 좀 뒤져.
  그리고 오라클sql이나 cmd>sqlplus에서는 접속 잘만 된다. 지금 자바프로젝트에서만 자꾸 아뒤/비번오류 뱉는 중.
-->해결 안 됨

[구글링4] C:\app\Me\product\21c\homes\OraDB21Home1\network\admin\sqlnet.ora 파일 수정
  SQLNET.AUTHENTICATION_SERVICES= (BEQ,TCP,TCPS,NTS)  #NTS만 있던 상태에서 BEQ,TCP등 추가
  맨 밑줄에 다음 코드 추가
  SQLNET.ALLOWED_LOGON_VERSION_SERVER=9
  SQLNET.ALLOWED_LOGON_VERSION_CLIENT=9
-->해결 안 됨

[구글링5] 접속주소 변경: SID('xe') 대신 서비스이름을 임의로 정해서 시도
-->해결 안 됨. 콜론(:),슬래시(/)등 여러번 바꿔가면서 모든 경우의 수 다 시도해봐도 안 됨. 
나 스스로 변태 강박충이라 모든 케이스 다 트라이 트라이,, 한 100트 넘게 계속 해보고 있다.


[ㅈㅇㄷ방식] db.properties생성해서 리소스추가하고 FileInputStream으로 접속정보 읽어들이는 방식
-->해결 안 됨. 아니 미니프로젝트로 만든 스벅앱 DB는 지금 잘만 접속 되는데, 왜 지금 프로젝트만 안되냐고.. 
코드도 완전 똑같은데.. sysout 찍어봐도 user,password 으로 정확한 String으로 읽어들이고 있는데..
오라클DB에서는 접속 잘만 되는데 도대체 왜 자바연동만 안되냐고..
심지어 starbucks/starbucks로 시도해도 안 됨.. 아니 모든 조건이 똑같은데 왜 이 프로젝트에서는 안 되고,
실시간으로 미니프로젝트에서는 접속이 정상적으로 잘만 되냐고..
왜 이 프로젝트에서만 ORA-01017 오류무새 무한반복이냐고.. 안 될 거면 둘 다 안되던가.. 
완전 복붙 동일한데 하나는 아뒤/비번이 맞고, 다른 하나는 아뒤/비번이 틀렸다고 나오고..
한 100트는 한 거 같은데 몇시간째고 존나 잠오네 씨발 구글링해도 이젠 안나오고 줮같네 일단 잔다 씨발

------------------
[jdbc수정] C:\app\Me\product\21c\dbhomeXE\jdbc\lib\ojdbc11.jar 파일을 프로젝트 라이브러리에 추가
--> 해결 됨.
학원 안가는 꿀주말 푹 자고 일어났더니 문득 그런 생각이 들었다. 
'오라클이고 이클립스고 아예 싹 밀고 깨끗하게 클린설치부터 새로 하면 될라나? 지금 뭐가 path같은 게 좆같이 꼬인걸 수도 있잖아..
잠만 설치? 혹시 jdbc 설치를 안했나? 프로젝트마다 jdbc설치 새로 해줘야 하나? 아닐텐데 그면 ORA-01017같은 jdbc의 오류 자체가 뜨면 안되겠지.. 아예 실행자체가 안될테니깐. 게다가 코드 자체도 이미 빨간줄이 떠있겠지.
그래도 혹시? 근데 jdbc 설치를 어케 했더라..'

예전에 ㅈㅇㄷ쌤 jdbc 설치수업 필기(제대로 안 함ㅜ)랑 구글링으로 jdbc 설치를 검색ㄱㄱ
별 거 없었네. 예전에 jdbc일단 한번 깔아놨으면, 그냥 오라클설치 디렉토리에 있는 ojdbc버전.jar 파일을 자바프로젝트 lib에 추가해주면 됨.

지금 문제의 프로젝트의 lib을 보니 ojdbc6.jar파일이 들어가 있더라. 
쎄-하다.
그러면서 동시에 순간 머리에 띵! 이게 모든 문제의 원인이었을 것만 같다는 아주 강한 확신이 든다. 어제 그 모든 개고생의 근본적인 원인...

집컴의 오라클은 21c버전이다(거의 최신). 19c버전 부터인가 많은 것이 바뀌면서 아주 많은 것이 바뀌었다고 알고 있다. 
오라클 계정 생성의 아이디의 형식같이 매우 기초적이고 세세한 것부터 아주 많이 다른 탓에, 학원에서 실습한 걸 집에서 이어서 할 때 종종 애가 먹었던 기억이 있다. 심지어 구글링으로 21c버전을 기준으로 알려주는 정보는 거의 전무하다시피 한다. 당장 위에만 보더라도 21c 버전은 sec_case같은 파라미터 자체가 없는데 모든 블로그,해외포럼 등 다들 한입으로 sec_case 수정하라고만 한다.
이렇게 짜증나고 번거로움에도 불구하고 나는 웬만하면 소프트웨어는 최신버전을 사용하려고 하는 편이다.
좀 강박같은 것이긴 한데, 뭔가 최신이 아니면 괜히 찝찝하다. 모바일 앱이든 윈도우 프로그램이든 문서든 엑셀이든 나는 무조건 최신버전이어야 한다. 하위호환이고 성능버벅댐이고 나발이고 일단 나는 무조건 최신버전을 선호한다. 
기존의 이점과 익숙함을 포기하면서도 최신버전을 선호하는 데에는 몇가지 이유가 있다. 
첫째, 보안성 향상. 둘째, 기능향상. 셋째, 디버깅. 넷째, 해당개발자는 병신이 아닐거라는 믿음(뭐라도 좋아졌으니깐 버전업을 했겠지..)
등등의 뻔한 이유들이다. 특별한 이유없이 뻔하기 때문에 스스로 강박이라고 규정하는 편이다.
어쨌든 유료가 말도 안되게 비싸다거나, 잠수함패치로 광고를 몰래 넣는다거나, 악의적으로 멀웨어를 심는 등(근데 애초에 이런 쎄-한 툴은 아예 거름)의 개같은 경우만 아니라면 내가 개인적으로 사용하는 거의 모든 SW는 웬만하면 최신버전이다.

다시 돌아와서, 학원에서 작업하던 DB관련 프로젝트를 집에와서 이어하려고 할 때 상당수 문제의 근본 원인은 오롯이 그 오라클 최신버전만의 특수성과 배타성에 기인한 경우가 대부분이었다. 
그래서 설마 이번에도?? 라는 쎄-하고, 띵-하면서 동시에 전율과 일말의 불신(실행자체가 안되는게 아니라 ORA-01017같은 매우 구체적인 오류를 뿜는 다는 사실)과 함께 역설적으로 강한 확신이 든 것이다. 

천하제일복붙폭주수업때 초반에 너무 휘리릭 지나가서 눈치를 못 챘는데, lib에 ojdbc6.jar 파일을 프로젝트 lib에 복사해 넣었던 것이 기억이 났다. 왜 그땐 제대로 안 봤을까.. 아니 봤어도 신경을 못썼겠지. '이렇게 저버전의 jdbc를? 이거 집에서 할 때 분명히 호환문제 생기겠는데..'라고 의문을 품었어야 했다.. 그 때 휙 지나가지 말고, 병신같이 눈꺼풀 감기는거 들어올릴려고 낑낑대는데 힘쓰지 말고, 빨리 폭주기관차 탑승해야지라면서 열손꾸락에나 텐션 넣지 말고! 좀! 머가리를 굴렸어야 했다! 생각을 좀 하라고 병신아!
매 순간 회의적이고 비판적인 씨발 데카르트, 칸트, 헤겔, 베이컨적인 근대 철학적 사고에 대한 사고에 대한 사고*1000와 관련된 근본적인 물음을 계속 던졌어야 했다! 바로 그 순간, 그 때 말이다! 그 때 그 것만 눈치챘더라도 어제의 고생은 절반, 아니 80%는 줄일 수 있었을 것이다.
또 한번 부족함을 느낀다. 매 순간 모든 것을 의심해야 한다. 그리고 동시에 확신의 밸런스도 갖춰야 한다. 

어쨌든 everything으로 내 컴 모든 영역에서 ojdbc를 검색해본다. 이미 다양한 경로에 다양한 버전의 .jar파일들이 존재해있다. 11,11_g,11dms등등 다양한 버전으로 뭐가 많긴한데 뭔 차이들지는 잘 모르겠다. 어제 개고생한거 열받아서 첨엔 홧김에 '시발 싹다 한번에 넣어볼까?' 라고 했다가, 다시 침착함을 붙잡아온다. 한번에 다 넣으면 뭐가 정답인지 알 수 없잖아.. 하나씩 넣어서 트라이해보자. 
ojdbc11.jar파일을 자바프로젝트 lib에 넣었다.
떨리는 맘으로 컨F11을 눌른다.
언제나처럼 시뻘건 서블릿 연결 메시지가 콘솔에 주루룩 찍힌다. 
그리고는 조용하다. 
이쯤되면 씨발 좆같은 그놈의 "ORA-01017: 사용자명/비밀번호가 부적합, 로그온할 수 없습니다" 녀석이 끌고온 시뻘건 오류군단들이 다시 콘솔창을 장악해야 한다.
근데 이번엔 조용하다.

된 건가?
설마?
의심+확신의 5:5밸런스가 팽팽하다.
뭔가 좋으면서 동시에 열받는다.. 
에이 이렇게 쉽다고? 아니잖아 새끼야, 좀 더 괴롭혀봐 씨발아. 어제 그렇게 못살게 굴었잖아. ORA-01017 니새끼 이렇게 쉽게 죽는다고 개새야??

웹페이지에다 데이터를 하나 입력해보다.
그리고 오라클로 넘어와서 테이블을 새로고침한다.

들어왔다.

씨발
이거였다. 이거 맞다. 와 존나 어이없네. 파일하나 넣으면 해결될 거. 씨발

아니 그럼 애초에 콘솔에 오류를 씨발이 "ojdbc 버전이 부적합합니다"라던지, 
아니면 아예 jdbc가 먹통으로 실행자체가 안 되게 그렇게 해주던지.
뭔 애꿎은 아뒤 비번을 자꾸 고치래ㅜㅜㅜㅜㅜㅜ
아 존나 낚인 건 생각하니깐 열받네
완전 씨발 낚여서 하루종일 거기에 매몰돼서 애먼 해답만 찾고 있었다.
하 존나 허탈하면서 또 한번 숙면의 위대함을 느낀다.

세상 모든 문제는 잠으로 해결되는 것 같다.
우울, 인간관계의 갈등, 난제봉착, 데드라인위기 등,, 거의 모든 인생의 오류를 잠이 대부분 해결해주었다.
잠의 시간도 시간이지만 질이 더 중요하다.
이럴 때 또 시몬스좌 에디슨 위인의 광고를 유튜브로 또 한번 복습해본다. 
Sleeping is just extravagant in our lives, I think 4 hours a day is enough, surely you need a comfotable sleep.
언제 들어도 귀에 착 감기는 그의 심플한 영작과 육성.
진짜 연설 중 한 말인지 순전히 시몬스코리아(?)에서 꾸며낸 기계음인지는 알 수 없다.
어쨋든 나는 그 광고가 좋다. 
그리고 이번에도 또 이렇게 '숙면'이 역발상의 꼬리를 입에 물리게 해주었다.
역시 잠은 모든 의미에서 과학이다. 


그리고 구글링.
요즘 점점 맘에 안 든다.
아주 오래전 네이버검색 탈출할 때, 정도 까지는 아니지만 그와 좀 비슷한 감정까지 올려고 한다. 

너무 무책임하고 천편일률적인 답변들이 많다. 기술블로그고 어디 커뮤고 포럼이고 죄다 복붙이다.
예를들어 아주 특수한 상황의 특수한 해법을 누군가가 처음으로 웹에 공개했다 치자. 
그런데 특수한 해법이 일종의 만병통치약처럼 여기 저기 상황에서 만능 디버깅이 되는 좋은 해법인 것이 밝혀졌다.
그것이 입소문을 탄다.
여기저기 복붙을 한다.
인터넷이 온통 그 해법으로만 도배된다.
그래서 어떤 상황에서는 반드시 그 해법만이 진리인 것처럼 "문제:정답"식의 1대1매칭 무지성 공식이 되어버린다.
정작 가장 심플하고 교과서적이고 근원적인 해법은 점점 저 수면 아래로 함몰된다.
이제 인터넷은 정말 그럴 듯하고 기가막히고 기상천외해 '보이는' 일종의 '꿀'팁만이 존재하게 된다. 

2022년 현재는 구글링에 매몰되는 것이 어떻게 보면 가장 큰 함정이 되고 있는 것 같다.
일단 나는 내 코드만 보는 것도 벅찬데, 남 코드는 진짜 1도 볼 여력이 없다. 
한 주제에 대해서(예:서블릿 연결) 물론 큰 줄기는 같겠지만, 변수설정부터 접근방식부터 세세한 모든 것이 내가 배우고 진행중인 방식과 많이 다르기 때문이다. 
지금 내 거를 당장 치고 앞으로 나아가야 하는 수준에서 남의 거 분석하고 디버깅하는 과정은 너무나 소모적이다. 
물론 현업이나 팀프로젝트하면 당연히 다 봐야겠지만, 일단 지금은 아니라고. 
지금 아주 원론적인 거 교과서 수준인 거 학습하고 있는데, 시발 남의 거 고급 코드 이쁘게 잘 해놓은거 그거 뭔 것멑들어서 쳐보고 앉아있냐. 그것들도 또 오류가 있을 지 없을 지 어케 앎?
그래서 지금 단계에서는 웬만하면 구글링을 최소화하고 있다. 아니 못하고 있다. 솔직히 내꺼 이해하는 것만으로도 벅차기 때문에.
그리고 오지랖받거나 부리는 것도, 빚지거나 주는 것도, 스포당하거나 하는 것 어느 것도 선호하지 않는 개인적인 성격도 아주 조금은 한목하는 탓도 있다. 
삶의 모든 문제에는 단서와 정답이 있다. 나는 일말의 단서를 꼬리, 해답을 머리에 종종 비유한다.
그리고 그 어떤 세상의 문제라도 꼬리는 반드시 파악이 가능하다. 당장 1차적인 꼬리가 파악 안 되더라도, 꼬리에 꼬리에 꼬리는 반드시 존재하기 마련이다.
파악이라고 해서 뭔가 거창하지만, 그냥 한 사건에 관한 단순한 사실명제에 불과하다. 즉 존재한다는 자체가 꼬리인 거지. 그러한 문제가 "있다"라는 것 자체가 하나의 단서인 셈이니깐.
나는 꼬리를 잡고 붙잡고 스스로 머리를 찾는 방식으로 모든 문제를 탐구한다. 좀 오그라들게 표현했지만 사실 인간이라면 누구나 매우 자연스럽게 그렇게 행동하고 사고하고 있다. 
다만 나는 스포와 핑프를 매우 싫어할 뿐이다. 그리고 존버력이 조금 괜찮은 편이다.
꼬리에 꼬리를 물고 어떻게든 꾸역꾸역 더듬고 트라이하다보면 얻어걸리는 순간이 온다. 여력이 되면 확장하여 탐구하고, 내키지 않으면 거기서 멈추면 된다. 
여기서 스포 당하고 싶지 않다. 나 혼자 해결하고 싶고 일단은 나 혼자만 알고 싶다. 전형적인 나작something 마인드의 좀 찐따스러운 아싸마인드긴 하다.

그렇다고 해서 완전 심각하게 폐쇄적이지도 않다. 스스로 찐따스럽지만 동시에 혐오하기도 하기 때문에 종종 개방적이고 유연한 사고로 나를 포장하기도 하고, 또 실제로 여러 사회를 거치면서 아주 유년기 이후로는 모든 면에서 상당히 유연해졌다. 
그래서 지금은 여전히 기본은 private, 정보은닉, 셀프해결이 배이스지만, 누군가의 요청, 물음이 온다면 즉각 솔직한 응답은 해주려고 노력중이다. 물론 반대로 나도 꽤 빈번하게 요청과 도움을 구하기도 한다. 단순 실수나 메모누락, 일정 같이 작은 것에 대해서는 뭐 혼자 낑낑댈 이유가 없다. 단순 정보 누락시에는 무조건 물어봐야 한다.
그리고 문제해결과정에서도 진짜 울기 직전까지 낑낑대며 꾸역꾸역 찾아가도 도저히 머리가 보이지 않는 순간이 오면, 내키진 않지만 누군가에게 헬프를 종종 친다. 그 순간의 기분은 솔직히 좋지 않다. 괜히 상대에게 미안하고, 내 한계에 대해 자책하게 되기 때문이다. 스스로 더 존버하다보면 분명히 머리를 잡을 수 있을 텐데.. 끝내 손을 놓아버려 스스로 지는 기분. 
이땐 사실 잠을 자야한다. 자고 나면 모든 것이 해결된다. 감정도 누그러들고 안 되던 역발상도 마구마구 샘솟는다. 경험적으로 그렇다. 잠이 정말 중요하다.

어쨌든 학습분야든, 각종 행정처리든 뭐든 모르면 반드시 물어봐야한다는 것은 정말 중요하다.

모르면 반드시 물어봐야한다.

다만 내가 진짜 모르는 것인가는 정말 끈기를 갖고 스스로 탐구를 해봐야한다.
구글링+N트+시간/비용소모+노가다 등등 모든 노력을 기울인 다음 그래도 해결이 되지 않으면 구걸해야지 뭐.
그러나 어떤 분야든지 간에 학습 단계에서 과제로 던져지는 것들은 충분히 많은 부분에서 셀프해결이 가능할 것이라고 확신을 가지고 있다. 
실무가 아니라 학습 단계라는 것은 당장 지금 해결 안 돼도 꼬리물고 넘어지면 언젠가는 해결될 수준의 단계라고. 
겨우 5분 머리쓰다가 지쳐서 헬프치는 건 내 스타일이 아니다. 아직 나 꼬리를 잡고 있는데, 꼬리물고 있는데 헬프친다? 그럼 바로 망이다. 그 부분은 그냥 내 것이 아닌 것이다. 나는 내 것. 내 소유가 중요하다. 헬프는 진짜 꼬리조차 보이지 않을 때에만 쳐야 한다.
또한 지금 한창 꼬리물고 있는데 누가와서 오지랖친다? 씨발새끼 바로 팔뒤꿈치에 징박아서 옹박처럼 아가리를 쳐날리고 싶다. 눈알을 보랄에 접붙이고 싶을 정도로 화가 치민다. 오지랖도 태도가 정말 중요하다. 하지만 다행히 내 인생에서 내 인내의 한계를 넘어서는 오지라퍼는 몇 명 보지 못했다. 내가 걷고있는 길의 성인들은 일단 대부분 정중하고 상식있는 사회인이다. 동네 건달 같이 쓰레기같은 삶을 사는 사회는 또 모르겠지만.

또한 누가 묻지도 않았는데 내가 스스로 나대면서 이래라 저래라 오지랖치는 건 나 스스로 상상도 할 수 없는 내 모습이다.
나는 기본적으로 선요청-후응답 방식의 절차를 중시한다. 
누가 안 물어오면 내 스스로 그냥 입닥치고 있고 싶다. 
물론 성심성의껏 물어온다면 정말 기꺼이 성심성의껏 알려주고 싶다. 
심지어 그 정보전달의 정도가 내가 혐오하는 오지라퍼보다 더 유난스럽고 구체적이더라도 말이다.
오지랖을 안부리는 거보다 어떻게 보면 이게 더 중요할 수도 있다.
일단 요청이 들어오면 최대한 친절하고 성심성의껏 신경써주는 것 말이다. 
요청을 해왔는데 그때도 씨발 시무룩하게 어둡게 아가리 닥치고 있는 건 그냥 반사회성 인격장애잖아.
어쩔 땐 오지랖보다 오히려 그게 더 싫다.

어쨌든 나한테 중요한 건 "순서"이다. 무조건 선요청 전에는 해답을 주지도, 반대로 받으려고 하지도 않아야 한다.
사실 알고보면 그것이 현대 자유주의의 근간이기도 한다. 
알 권리 만큼이나 동시에 모를 권리 또한 보장되어야 하며, 선요청에 따른 응답이 기본 시스템이다.
반대로 말하면 응답이라는 보상을 얻기 위해서는 반드시 요청이 필수 선과제인 것이다. 
작은 행정처리부터 모든 사회의 매커니즘이 그러하다.
가장 대표적인 예로 다양한 사회복지제도가 있다. 
진짜 알고보면 개이득인 깨알같은 복지정책들이 정말 정말 정말 많이 있다.
자유주의 사회에서 그런 것들 잘 타먹으려면 개인이 알아서 빠릿빠릿 알아보고 "신청"을 잘 해야 한다.
행정뿐만 아니라 사법시스템도 모든 상황에서 "신청"이라는 행위가 매우 중요하게 작동함은 두말 할 필요가 없다.

나는 자연스러움을 절대적으로 추구하고, 그러한 자유주의 매커니즘에 걸맞은 가장 자연스러운 행동양식을 따를 뿐이라고 생각한다.
내 신념상 무요청오지랖(선나댐)은 현대 사회의 자유주의를 근간으로 한 암묵의 룰을 깨는 대단히 부자연스러운 행위로 느껴진다.
나 스스로 그런 모습을 보이는 것은 스스로 용납이 잘 안 된다. 
혹시나 불가피하게 그런 상황이 생기더라도(어떤 경쟁상황에서 주목도를 이끌어서 승부를 봐야한다든지) 마음이 편치는 않다. 괜히 내가 잘난 척 하는 것 같아 스스로 너무 꼴보기가 싫어진다.
그리고 그렇게 행동하는 것에 대한 구실이 전혀 없다. 새끼 뭔데 나대? 라는 말이 나오지 않도록 변명할 구실, 즉 모든 행동에는 명분이 있어야한다. 선요청이 그 명분이 되어야 한다. 쟤가 물어봐서 대답해준건데? 라고 빠져나갈 구멍이 있어야 한다고 생각한다. 사실 아무도 그렇게 안보겠지만, 그냥 스스로 어떤 해동을 할 때 그런 작은 의심의 여지를 남기고 싶지 않다.

물론 사람마다 가치관과 성격이 다르겠지만, 나는 내 방식이 꽤나 인생에서 잘 먹혀들어갔다고 확신한다. 
과하게 폐쇄적이지도, 과하게 나대지도 않는 밸런스를 꽤나 잘 지켜왔고, 주변 사람들과의 관계가 늘 괜찮았다.
씹인싸는 아니지만 절대 아싸는 되지 않았다. 사실 뭐 이런 사람이 세상의 80%긴 하다. 
20%는 씹인싸나 사회부적응자로 구성된다 치면, 나는 80%에 속한 전형적인 노멀한 성격이고, 그게 가장 좋은 것이라고 확신한다. 
인싸성격을 타고나면 땡큐고 하위 10%쓰레기 같은 인성만 아니면 그냥 인격적으로 잘 성장한 걸로 만족한다.


어쨌든 다시 돌아와서,
코딩 입문 2개월차, 그동안 깨달은 것을 다시금 되뇌어본다. 

1. '생각보다' 해답은 단순하다. 
=> '생각보다'에 초점을 맞춘다. 즉 생각을 너무 깊게 하는 습관을 빼야한다는 것이다.
백지에 뭘 구현하라는 과제가 떨어졌을 때, '아 수업때 교수님처럼 존나 뭐 많이 적던데, 나도 뭔가를 더 추가 해야하는 거 아니냐?' 같이 뭔가 대단히 복잡하고 거대한 코딩라인을 다발로 적어야한다는 강박을 가지는 것은 많은 상황에서 진취적인 사고를 방해했다. 
오히려 '이 정도 구현하는 건데 일단 이거 한 줄부터 적어보자'라는 식으로 제일 밑 근본적인 원리부터 하나씩 조져나가면서, 구현이 성공하면 거기서 멈추고, 안될 때에만 한단계 더 구체적으로 쪼여나가야 한다. 속도면이나 이해면에서 좀 더 효율적이고 정확한 것 같다.

2. 노가다는 배신하지 않는다.
=> 내가 가진 한정된 자원(그 동안 배운 함수, 라이브러리 등)으로 만으로도 구현 자체는 가능하다는 '확신'이 베이스다.
더 좋은 방법이 없을까해서 구글링해서 답을 찾으면 땡큐고, 아니면 노가다로 진행한다.
어차피 지금 수준에서 나의 노가다는 다른 친구들이나 교수님의 눈에도 '불가피'한 노가다의 공덕으로 웬만하면 인정을 할 것이다. 즉 '병신이 이거 한 줄이면 되는데 뭘 그렇게 고생함?ㅋㅋ' 쿨하게 시전할 수 있는 수준의 개발자는 지금 내 주변에 없다는 믿음.
물론 그렇게 좆같은 안하무인 방식으로 오지랖 떠는 사회부적응자 ADHD새끼는 실력이 고수든 하수든 나랑은 안맞는 새끼이므로 내 인생에서 철저히 배제한다. 실제로 의도적으로 배제해왔으며 결과적으로 매우 성공적이었으며 다행히 내 주변에는 정말 좋은 사람들만 남아왔고 인생동안 인간관계에서의 스트레스는 거의 없었던 것 같다. 물론 그런 인성 개차반 새끼들은 대부분 현실 좆찐따일 확률이 통계적으로도 경험적으로도 많았기 때문에 전혀 아쉬울 것도 없다. 그런 휴민트는 전혀 필요없다.
물론 현업에 가면 다를 수 있다.
그래도 어느 조직이든, 어드 직업이든, 현업에 가서도 입문자에 맞는 수준으로 노가다로 끈기를 보여준다면, 그를 지켜보는 주변인이 웬만한 정상적인 인성의 사회인이라면 그의 수고로움의 대가(아주 작은 칭찬이라도)는 반드시 돌려주게 되어있다.
미친놈처럼 하나 붙잡고 낑낑대면서 저렇게 하는데 거기에 욕할 사람은 없다(는 확신을 갖는 것이 중요하다). 물론 그 노가다의 결과물은 범상치 않아야 한다. 누가봐도 '불가피'한 노가다, 즉 노가다로 그 많은 시간을 투여하여 낼 수밖에 없는 결과물 처럼 보여야 한다. 그냥 시간 헛되이 보낸 것이 아닌 것처럼 적당한 수준의 양量치기는 양심적으로 보여줘야 한다. 여기서 또 '양심점수론'(양심적으로 N시간만 투여한다면, 과제를 겨우 통과할 정도의 최소한의 찍신의 가호를 받게 됨. N=양심기간. 예: 재경관리사3~4주, 정처기1~2주 등) 과도 연결된다.
과거 신임소위 첫 한 두 달차의 경험을 회고해본다. 출납이 하필 1년중 가장 바쁜 시기에 자대배치를 받은 개같은 상황에 폭풍같이 몰려드는 기본출납업무+연말정산업무+성과금뿜빠이(씨발 불법행위를 왜 나한테 시킴?) 작업 때 시간외 50시간씩 풀로찍으면서 보여줬던 엑셀노가다는 다들 혀를 내두를 수밖에 없었고, 그 이후 3년간의 내 군생활에서 아무도 나를 무시하지 못하게 만들었다.
어디든 초심자는 부족한 만큼 노가다로 승부를 봐야 한다.
그리고 보상은 확실하게 돌아온다(는 믿음이 중요하다).

지금까지 내가 찾은 코딩의 진리는 이 두가지이고, 
스스로 '진리'라고 명명할 만큼 많은 상황에서 보편적으로 통용되는 법칙으로 적용되고 있다. 아직까지는. 

이번에도 제1법칙이 적용된 대표적인 사례가 될 것이다.
 




